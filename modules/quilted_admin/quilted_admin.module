<?php
/**
 * @file
 * Code for the Quilted Admin feature.
 */

include_once 'quilted_admin.features.inc';

/**
 * Implements hook_permission().
 */
function quilted_admin_permission() {
  $permissions = array(
    'edit custom website settings' => array(
      'title' => t('Edit general website settings'),
      'description' => t('Allow users to edit custom variables'),
    ),

    'access top level admin pages' => array(
      'title' => t('Access top level administrative pages'),
      'description' => t('Allow users to access administrative landing pages and menu items'),
    ),
  );

  return $permissions;
}

/**
 * Implements hook_menu_alter().
 */
function quilted_admin_menu_alter(&$items) {
  // Create an in-between permission
  if (isset($items['admin/structure'])) {
    $items['admin/structure']['access arguments'] = array('access top level admin pages');
  }
  if (isset($items['admin/config'])) {
    $items['admin/config']['access arguments'] = array('access top level admin pages');
  }
  if (isset($items['admin/config/search'])) {
    $items['admin/config/search']['access arguments'] = array('access top level admin pages');
  }
  if (isset($items['admin/config/content'])) {
    $items['admin/config/content']['access arguments'] = array('access top level admin pages');
  }
}

/**
 * Implements hook_admin_paths().
 */
function quilted_admin_admin_paths() {
  $paths = array(
    'media/*/format-form' => TRUE,
  );
  return $paths;
}

/**
 * Impelements hook_context_plugins().
 */
function quilted_admin_context_plugins() {
  $plugins = array(
    'is_admin_page' => array(
      'handler' => array(
        'path' => drupal_get_path('module', 'quilted_admin') . '/plugins/context',
        'file' => 'is_admin_page.inc',
        'class' => 'is_admin_page',
        'parent' => 'context_condition',
      ),
    ),
  );
  return $plugins;
}

/**
 * Implements hook_context_registry().
 */
function quilted_admin_context_registry() {
  $registry = array(
    'conditions' => array(
      'is_admin_page' => array(
        'title' => t('Admin Page'),
        'description' => t('Set this context based on whether or not the current page an admin page.'),
        'plugin' => 'is_admin_page',
      ),
    ),
  );
  return $registry;
}

/**
 * Implements hook_context_page_reaction().
 *
 * Gotta run on context_page_reaction, so Views and OG have a chance to
 * set/modify Group context.
 *
 * @see https://ohthehugemanatee.org/blog/2013/12/02/custom-context-conditions
 */
function quilted_admin_context_page_reaction() {
  $plugin = context_get_plugin('condition', 'is_admin_page');
  if ($plugin) {
    $plugin->execute();
  }
}
