#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'commander/import'
require 'fileutils'

program :version, '0.0.1'
program :description, 'Setup an initial drupal setup'

command :setup do |c|
  c.syntax = 'drupal setup <project_name> [options]'
  c.description = 'Creates and installs a new Drupal project.'
  c.example 'Create a project called Superapp.', 'drupal setup "Superapp"'
  c.option '--makefile FILE', String, 'Path to drush makefile'
  c.option '--gitignore FILE', String, 'Path to .gitignore file'
  c.option '--install_profile NAME', String, 'The name of the install profile to use. Must be in profiles directory'
  c.option '--db_name NAME', String, 'Database name'
  c.action do |args, options|
    if args[0].nil?
      puts "Please specify a project name."
    else
      # Setup constants.
      # @TODO make sure project name is safe.
      PROJECT_NAME = args[0]
      SOURCE_PATH = File.expand_path(File.dirname(__FILE__))
      
      # Setup optional flags.
      options.default \
        :makefile => "#{ SOURCE_PATH }/d7.make",
        :gitignore  => "#{ SOURCE_PATH }/gitignore.txt",
        :install_profile  => "quilted_profile",
        :db_name => PROJECT_NAME
      
      # Ask for key inputs.
      db_user = ask "> Database user:"
      db_password = password "> Database password:"
      drupal_email = ask "> Drupal email:"
            
      # Go through the process.
      create_file_structure
      create_drushrc
      create_gitignore options.gitignore
      download_drupal options.makefile
      create_drushrc_symlink
      copy_features
      copy_install_profile
      install_drupal options.install_profile, db_user, db_password, drupal_email
      setup_git
    end
  end
end

def create_file_structure
  puts 'Setting up file structure...'
  FileUtils.mkdir_p "#{ PROJECT_NAME }/databases"
  FileUtils.mkdir_p "#{ PROJECT_NAME }/private_files"
  FileUtils.mkdir_p "#{ PROJECT_NAME }/tmp_files"
end

def create_drushrc
  puts "Setting up drushrc.php..."
  FileUtils.cp "#{ SOURCE_PATH }/dgb/example-dgb.drushrc.php", "#{ PROJECT_NAME }/drushrc.php"
end

def download_drupal(makefile)
  puts "Download Drupal and modules..."
  system %{ drush make --prepare-install #{ makefile } #{ PROJECT_NAME }/www }
end

def create_gitignore(gitignore)
  puts "Setting up .gitignore..."
  puts gitignore
  FileUtils.cp "#{ gitignore }", "#{ PROJECT_NAME }/.gitignore"
end

def create_drushrc_symlink
  puts  "Create drushrc.php symlink..."
  File.symlink("../drushrc.php", "#{ PROJECT_NAME }/www/drushrc.php")
end

def copy_install_profile
  FileUtils.cp_r "#{ SOURCE_PATH }/profiles/quilted_profile", "#{ PROJECT_NAME }/www/profiles/quilted_profile"
end

def copy_features
  FileUtils.cp_r "#{ SOURCE_PATH }/custom", "#{ PROJECT_NAME }/www/sites/all/modules/custom"
end

def install_drupal(install_profile, db_user, db_password, drupal_email)
  puts "Install Drupal..."  
  si_command = "drush si #{ install_profile } --site-name=#{ PROJECT_NAME } --site-email=#{ drupal_email } --account-name=admin --account-pass=admin --account-email=#{ drupal_email } --db-url=mysql://#{ db_user }:#{ db_password }@localhost:/#{ PROJECT_NAME } -y"
  
  FileUtils.cd "#{ PROJECT_NAME }/www"
  system %{ #{ si_command } }
  FileUtils.cd "../.."
end

def setup_git
  puts "Setting up git repo..."
  FileUtils.cd PROJECT_NAME
  system %{ git init; git add -A; git commit -m "Initial commit" }
  FileUtils.cd ".."
end

